# example .env file
# keep port 8000. If need to change, need to update the port in the dockerfile
# DO NOT PUSH .ENV FILES TO ANY SOURCE CONTROL (I.E. GITHUB)

# Instructions:
# 1. Create a .env.development file in the root of the project
# 2. Copy the contents of the .env.development section into the .env.development file
# 3. Update the values as needed (i.e. database credentials, google client id/secret)
# 4. Repeat with .env.test
# 5. When updating repository, make sure to check .env.example if new environment variables are added

# ----- .env.development -------
DATABASE_URL=postgres://postgres:bostonhacksapidev@localhost:5432/bostonhacksapidev
DATABASE_DIRECT_URL=postgres://postgres:bostonhacksapidev@localhost:5432/bostonhacksapidev # this is for supabase, keep the same here
PORT=8000
NODE_ENV=development

# You must create your own google client id and secret via the google developer console
# You can look here for that: https://support.google.com/cloud/answer/6158849?hl=en
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_OAUTH_URL=https://accounts.google.com/o/oauth2/v2/auth
GOOGLE_ACCESS_TOKEN_URL=https://accounts.google.com/o/oauth2/token
GOOGLE_TOKEN_INFO_URL=https://www.googleapis.com/oauth2/v3/userinfo
GOOGLE_CALLBACK_URL=http://localhost:8000/auth/google/callback

JWT_SECRET=example_key

LOG_LEVEL=debug





# ------- .env.test --------- 
# These are the environment variables for your own local test environment
DATABASE_URL=postgres://postgres:bostonhacksapidev@db:5432/bostonhacksapidev
DATABASE_DIRECT_URL=postgres://postgres:bostonhacksapidev@db:5432/bostonhacksapidev # this is for supabase, keep the same here
PORT=8000
NODE_ENV=test

GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_OAUTH_URL=https://accounts.google.com/o/oauth2/v2/auth
GOOGLE_ACCESS_TOKEN_URL=https://accounts.google.com/o/oauth2/token
GOOGLE_TOKEN_INFO_URL=https://www.googleapis.com/oauth2/v3/userinfo
GOOGLE_CALLBACK_URL=http://localhost:8000/auth/google/callback

JWT_SECRET=example_key

LOG_LEVEL=verbose

